// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SistemaDeViajes.DataAccess;
using SistemaDeViajes.Entities;

#nullable disable

namespace SistemaDeViajes.DataAccess.Context
{
    public partial class DB_SistemaviajesContext : DbContext
    {
        public DB_SistemaviajesContext()
        {
        }

        public DB_SistemaviajesContext(DbContextOptions<DB_SistemaviajesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<tbCargos> tbCargos { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbRolesXPantallas> tbRolesXPantallas { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbSucursalesPorEmpleados> tbSucursalesPorEmpleados { get; set; }
        public virtual DbSet<tbTransportista> tbTransportista { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbViajes> tbViajes { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "Modern_Spanish_CI_AS");

            modelBuilder.Entity<tbCargos>(entity =>
            {
                entity.HasKey(e => e.carg_Id)
                    .HasName("PK_Gral_tbCargos_carg_Id");

                entity.ToTable("tbCargos", "Gral");

                entity.HasIndex(e => e.carg_Nombre, "UQ_Gral_tbCargos__carg_Nombre")
                    .IsUnique();

                entity.Property(e => e.carg_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.carg_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.carg_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.carg_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbCargosusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbCargos_usua_UsuarioCreacion_Acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbCargosusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Gral_tbCargos_usua_UsuarioModificacion_Acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.depa_Id)
                    .HasName("PK_Gral_tbDepartamentos_depa_Id");

                entity.ToTable("tbDepartamentos", "Gral");

                entity.Property(e => e.depa_Codigo)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.depa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbDepartamentosusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbDepartamentos_Acce_tbUsuarios_usua_UsuarioCreacion_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbDepartamentosusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Gral_tbDepartamentos_Acce_tbUsuarios_usua_UsuarioModificacion_usua_Id");
            });

            modelBuilder.Entity<tbEmpleados>(entity =>
            {
                entity.HasKey(e => e.empl_Id)
                    .HasName("PK_Rrhh_tbEmpleados_emad_Id");

                entity.ToTable("tbEmpleados", "Rrhh");

                entity.HasIndex(e => e.empl_DNI, "UQ_Gral_tbEmpleados_empl_DNI")
                    .IsUnique();

                entity.Property(e => e.empl_Apellidos)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.empl_DNI)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.empl_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(500);

                entity.Property(e => e.empl_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.empl_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.empl_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.empl_Nombres)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.empl_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.empl_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.HasOne(d => d.carg)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.carg_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbCargos_Adua_tbasEmpleados_carg_Id");

                entity.HasOne(d => d.eciv)
                    .WithMany(p => p.tbEmpleados)
                    .HasForeignKey(d => d.eciv_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbEstadosCiviles_Adua_tbEmpleados_eciv_Id");

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEmpleadosusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Acce_tbUsuarios_Gral_tbEmpleados_empl_UsuarioCreacion");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEmpleadosusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Acce_tbUsuarios_Gral_tbEmpleados_empl_UsuarioModificacion");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.eciv_Id)
                    .HasName("PK_Gral_tbEstadosCiviles_eciv_Id");

                entity.ToTable("tbEstadosCiviles", "Gral");

                entity.HasIndex(e => e.eciv_Nombre, "UQ_Gral_tbEstadosCiviles_eciv_Nombre")
                    .IsUnique();

                entity.Property(e => e.eciv_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.eciv_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.eciv_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.eciv_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbEstadosCiviles_usua_UsuarioCreacion_Acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbEstadosCivilesusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Gral_tbEstadosCiviles_usua_UsuarioModificacion_Acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK_Gral_tbMunicipios_muni_Id");

                entity.ToTable("tbMunicipios", "Gral");

                entity.Property(e => e.muni_Codigo)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.HasOne(d => d.depa)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.depa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbMunicipios_Gral_tbDepartamentos_depa_Id");

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbMunicipiosusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Gral_tbMunicipios_Acce_tbUsuarios_usua_UsuarioCreacion_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbMunicipiosusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Gral_tbMunicipios_Acce_tbUsuarios_usua_UsuarioModificacion_usua_Id");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id)
                    .HasName("PK_Acce_tbPantallas_pant_Id");

                entity.ToTable("tbPantallas", "Acce");

                entity.Property(e => e.pant_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.pant_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.pant_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pant_Identificador)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(150);

                entity.Property(e => e.pant_href)
                    .IsRequired()
                    .HasMaxLength(70);

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbPantallasusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Acce_tbPantallas_pant_usua_UsuarioCreacion_Acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbPantallasusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Acce_tbPantallas_pant_usua_UsuarioModificacion_Acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK_Acce_tbRoles_role_Id");

                entity.ToTable("tbRoles", "Acce");

                entity.Property(e => e.role_Descripcion).HasMaxLength(500);

                entity.Property(e => e.role_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRolesusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Acce_tbUsuarios_usua_UsuarioCreacion_Acce_tbRoles_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRolesusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Acce_tbUsuarios_usua_UsuarioModificacion_Acce_tbRoles_usua_Id");
            });

            modelBuilder.Entity<tbRolesXPantallas>(entity =>
            {
                entity.HasKey(e => e.ropa_Id)
                    .HasName("PK_Acce_tbRolesXPantallas_ropa_Id");

                entity.ToTable("tbRolesXPantallas", "Acce");

                entity.HasIndex(e => new { e.role_Id, e.pant_Id }, "UQ_Acce_tbRolesXPantallas_pant_Id_role_Id")
                    .IsUnique();

                entity.Property(e => e.ropa_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.ropa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.ropa_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.pant)
                    .WithMany(p => p.tbRolesXPantallas)
                    .HasForeignKey(d => d.pant_Id)
                    .HasConstraintName("FK_Acce_tbRolesXPantallas_pant_Id_Acce_tbPantallas_pant_Id");

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbRolesXPantallas)
                    .HasForeignKey(d => d.role_Id)
                    .HasConstraintName("FK_Acce_tbRolesXPantallas_role_Id_Acce_tbRoles_role_Id");

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbRolesXPantallasusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Acce_tbRolesXPantallas_usua_UsuarioCreacion_Acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbRolesXPantallasusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Acce_tbRolesXPantallas_usua_UsuarioModificacion_Acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.sucu_Id)
                    .HasName("PK_Viaj_tbSucursales_sucu_Id");

                entity.ToTable("tbSucursales", "Viaj");

                entity.Property(e => e.sucu_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.sucu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Viaj_tbSucursales_Gral_tbMunicipios_muni_Id");

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbSucursalesusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Viaj_tbSucursales_Acce_tbUsuarios_usua_UsuarioCreacion");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbSucursalesusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Viaj_tbSucursales_Acce_tbUsuarios_usua_UsuarioModificacion");
            });

            modelBuilder.Entity<tbSucursalesPorEmpleados>(entity =>
            {
                entity.HasKey(e => e.suem_Id)
                    .HasName("PK_Viaj_tbSucursalesPorEmpleados_suem_Id");

                entity.ToTable("tbSucursalesPorEmpleados", "Viaj");

                entity.Property(e => e.suem_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.suem_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.suem_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbSucursalesPorEmpleadosusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Viaj_tbSucursalesPorEmpleados_usua_UsuarioCreacion_Acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbSucursalesPorEmpleadosusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Viaj_tbSucursalesPorEmpleados_usua_UsuarioModificacion_Acce_tbUsuarios_usua_Id");
            });

            modelBuilder.Entity<tbTransportista>(entity =>
            {
                entity.HasKey(e => e.tran_Id)
                    .HasName("PK_Rrhh_tbTransportista_tran_Id");

                entity.ToTable("tbTransportista", "Rrhh");

                entity.Property(e => e.tran_Apellido)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tran_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.tran_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tran_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tran_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tran_TarifaPorKM).HasColumnType("decimal(18, 0)");

                entity.Property(e => e.tran_Telefono)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbTransportistausua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Rrhh_tbTransportista_Acce_tbUsuarios_usua_UsuarioCreacion");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbTransportistausua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Rrhh_tbTransportista_Acce_tbUsuarios_usua_UsuarioModificacion");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.usua_Id)
                    .HasName("PK_Acce_tbUsuarios_usua_Id");

                entity.ToTable("tbUsuarios", "Acce");

                entity.HasIndex(e => e.usua_Nombre, "UQ_acce_tbUsuarios_usua_Nombre")
                    .IsUnique();

                entity.Property(e => e.usua_Contrasenia).IsRequired();

                entity.Property(e => e.usua_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.usua_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.usua_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.usua_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<tbViajes>(entity =>
            {
                entity.HasKey(e => e.viaj_Id)
                    .HasName("PK_Viaj_tbViajes_viaj_Id");

                entity.ToTable("tbViajes", "Viaj");

                entity.Property(e => e.viaj_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.viaj_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.viaj_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.viaj_FechaViaje).HasColumnType("datetime");

                entity.HasOne(d => d.usua_UsuarioCreacionNavigation)
                    .WithMany(p => p.tbViajesusua_UsuarioCreacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_Viaj_tbViajes_usua_UsuarioCreacion_Acce_tbUsuarios_usua_Id");

                entity.HasOne(d => d.usua_UsuarioModificacionNavigation)
                    .WithMany(p => p.tbViajesusua_UsuarioModificacionNavigation)
                    .HasForeignKey(d => d.usua_UsuarioModificacion)
                    .HasConstraintName("FK_Viaj_tbViajes_usua_UsuarioModificacion_Acce_tbUsuarios_usua_Id");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}